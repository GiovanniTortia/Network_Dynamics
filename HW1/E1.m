clear all
close all
clc

%% Parameters

% capacities
c = [3, 2, 3, 2, 3, 1, 1, 1];  

% "set" of all nodes
NU = [1, 2, 3, 4, 5];

% node-link adj. matrix
B = [[1, 0, 1, 0, 0, 0, 0, 1]; 
     [-1, 1, 0, 0, 0, 0, 1, 0];
     [0, 0, -1, 1, 1, 0, -1, 0];
     [0, 0, 0, 0, -1, 1, 0, 0];
     [0, -1, 0, -1, 0, -1, 0, -1]];

%% Question A

min_cut = -1;
min_cc = Inf;

% All the possible o-d cuts are generated by generating all the combinations of nodes
% a, b, c and by adding d to each combination

for i=0:3
    cuts = nchoosek(NU(2:4), i);
    for j = 1:size(cuts, 1)
        cut = [cuts(j,:), 5];
        [cc, edges] = cut_capacity(cut, B, c);
        fprintf("Cut: \n");
        disp(cut);
        fprintf("Boundary: \n");
        disp(edges);
        fprintf("cc: %d\n\n\n", cc);
        if cc < min_cc
            min_cc = cc;
            min_cut = cut;
        end
    end
end

fprintf("Min cut: ");
disp(min_cut);
fprintf("Min cut capacity: %d\n", min_cc);

%% Question B
max_ac = 15;
sol = zeros(max_ac, 1);
a_sol = zeros(max_ac, size(B, 2));

for X = 0:max_ac
    a_opt = brute_force(X, c, zeros(1, size(B, 2)), zeros(1, size(B, 2)), 0);
    sol(X+1,1) = throughput(a_opt, c);
    a_sol(X+1,:) = a_opt;
end

plot(0:max_ac, sol);
xlabel("x");
ylabel("maximum throughput")
grid on
